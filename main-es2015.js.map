{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/navigation/navigation.component.html","./src/app/components/navigation/navigation.component.ts","./src/app/modules/articulos/articulos.component.html","./src/app/modules/articulos/articulos.component.ts","./src/app/modules/articulos/articulosalta/articulosalta.component.html","./src/app/modules/articulos/articulosalta/articulosalta.component.ts","./src/app/modules/articulos/services/articulos.service.ts","./src/app/modules/clientes/clientes.component.html","./src/app/modules/clientes/clientes.component.ts","./src/app/modules/clientes/clientesalta/clientesalta.component.html","./src/app/modules/clientes/clientesalta/clientesalta.component.ts","./src/app/modules/clientes/services/clientes.service.ts","./src/app/modules/configuracion/configuracion.component.html","./src/app/modules/configuracion/configuracion.component.ts","./src/app/modules/configuracion/services/configuracion.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { environment } from './../environments/environment';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\n\nimport { AppComponent } from './app.component';\n\nimport { ClientesComponent } from './modules/clientes/clientes.component';\nimport { ClientesaltaComponent } from './modules/clientes/clientesalta/clientesalta.component';\nimport { ConfiguracionComponent } from './modules/configuracion/configuracion.component';\n\nimport { ArticulosComponent } from './modules/articulos/articulos.component';\nimport { ArticulosaltaComponent } from './modules/articulos/articulosalta/articulosalta.component';\n\n\n// import {ClientesaltaComponent} from './modules/clientes/clientesalta/clientesalta.component';\n\nconst routes: Routes = [\n  { \n\n      path: 'clientes',\n      component: ClientesComponent,\n      //loadChildren: './modules/clientes/clientes.module#ClientesModule',\n    // children: [\n    // {\n    //   path: '',\n    //   component: ClientesaltaComponent,\n},\n{ path: 'clientes/nuevo',  component: ClientesaltaComponent },\n{ path: 'clientes/editar/:id',  component: ClientesaltaComponent },\n{ path: 'configuracion',  component: ConfiguracionComponent },\n\n{ path: 'articulos',  component: ArticulosComponent },\n{ path: 'articulos/nuevo',  component: ArticulosaltaComponent },\n{ path: 'articulos/editar/:id',  component: ArticulosaltaComponent },\n  { path: '',   redirectTo: '/', pathMatch: 'full' },\n  { path: '**',  redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n    \n}\n","<app-navigation></app-navigation>\n\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'exam';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { ClientesComponent } from './modules/clientes/clientes.component';\nimport { ClientesaltaComponent } from './modules/clientes/clientesalta/clientesalta.component';\n\nimport { ConfiguracionComponent } from './modules/configuracion/configuracion.component';\nimport { ArticulosComponent } from './modules/articulos/articulos.component';\nimport { ArticulosaltaComponent } from './modules/articulos/articulosalta/articulosalta.component';\n\n\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    ClientesComponent,\n    ClientesaltaComponent,\n    ConfiguracionComponent,\n    ArticulosComponent,\n    ArticulosaltaComponent\n  ],\n  imports: [\n    FormsModule, \n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BsDropdownModule.forRoot(),\n    BrowserAnimationsModule,\n    HttpClientModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: [BsDropdownModule],\n})\nexport class AppModule { }\n","\n  <!-- Toolbar -->\n  <div class=\"extratoolbar\" role=\"banner\">\n    <div class=\"spacer\"></div>\n    <span>La Vendimia</span>\n  </div>\n  <div class=\"toolbar\" role=\"banner\">\n  \n    <div class=\"dropdown\" dropdown> <!-- {1} -->\n      <button dropdownToggle role=\"button\" style=\"padding: 12px; background-color: #333; color: white;\"> <!-- {2} -->\n        Inicio <span class=\"caret\"></span></button>\n      <ul *dropdownMenu class=\"dropdown-menu\"> <!-- {3} -->\n          <li><a href=\"#\">Ventas</a></li>\n          <div class=\"dropdown-divider\"></div>\n          <li><a routerLink=\"/clientes\" routerLinkActive=\"active\">Clientes</a></li>\n          <li><a routerLink=\"/articulos\" routerLinkActive=\"active\">Articulos</a></li>\n          <li><a routerLink=\"/configuracion\" routerLinkActive=\"active\">Configuraci&oacute;n</a></li>\n      </ul>\n    </div>\n    \n  \n    \n      <div class=\"spacer\"></div>\n      <span>Fecha: {{ fecha }}</span>\n  </div>\n  <div class=\"espacio\" role=\"banner\">\n  </div>\n\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  title = 'exam';\n  fecha: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    this.fecha = new Date;\n    this.fecha = this.fecha.getDate()+'/'+(this.fecha.getMonth()+1)+'/'+this.fecha.getFullYear();\n    \n  }\n\n}\n","<div class=\"row\" >\n    <button class=\"btn btn-success\" (click)=\"articuloNuevo()\"> \n        Nuevo Art&iacute;culo\n    </button>\n\n</div>\n\n<br>\n\n<div class=\"row\">\n    <div class=\"col\">\n        <h4>Art&iacute;culos Registrados</h4>\n\n        <table class=\"table table-hover\">\n            <thead>\n                <tr>\n                    <td>Clave Articulo</td>\n                    <td>Descripci&oacute;n</td>\n                    <td></td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let row of mGridArticulo.data\">\n                    <td>{{row.articulo}}</td>\n                    <td>{{row.descripcion}}</td>\n                    <td> \n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"editararticulo(row.articulo)\">Editar</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n\nimport { ArticulosService } from './services/articulos.service';\n\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-articulos',\n  templateUrl: './articulos.component.html',\n  styleUrls: ['./articulos.component.css']\n})\nexport class ArticulosComponent implements OnInit {\n\n  public mGridArticulo: any;\n\n  public data: any;\n\n  constructor(\n    private art: ArticulosService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  \n    this.mGridArticulo = {\n      selected: [],\n      cols: [\n        { field: 'articulo', header: 'Clave Articulo', width: '20%' },\n        { field: 'descripcion', header: 'Descripcion', width: '70%' },\n        { field: 'boton', header: '' }\n      ],\n      data: [\n      ],\n    };\n\n    this.art.getArticulos().subscribe(\n      res => {\n        this.mGridArticulo.data = res;\n      },\n      err => console.log(err) \n    )\n\n  }\n\n  public articuloNuevo() {\n    this.router.navigate(['/articulos/nuevo']);\n  }\n\n  public editararticulo(id) {\n    this.router.navigate(['/articulos/editar/'+id]);\n  }\n\n}\n","<div class=\"col-md-10 offset-md-1\">\n\n    <div class=\"card border-secondary\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    {{title}}\n                </div>\n               \n                <div class=\"col-sm-6\">\n                    <p align=\"right\">Clave:{{artserie}}</p> \n                </div>\n            </div>\n            \n            \n        </div>\n       \n        <div class=\"card-body text-secondary\">\n\n        <form class=\"form-horizontal\" [formGroup]=\"articulosForm\">\n            <div class=\"form-group row\">\n            <label for=\"inputName\" class=\"col-sm-2 col-form-label\">Descripci&oacute;n:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputName\" placeholder=\"descripcion\" formControlName=\"descripcion\">\n                <span\n                  *ngIf=\"articulosForm.controls['descripcion'].invalid && articulosForm.controls['descripcion'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapp\" class=\"col-sm-2 col-form-label\">Modelo:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapp\" placeholder=\"modelo\" formControlName=\"modelo\">\n                <span\n                  *ngIf=\"articulosForm.controls['modelo'].invalid && articulosForm.controls['modelo'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapm\" class=\"col-sm-2 col-form-label\">Precio:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapm\" placeholder=\"precio\" formControlName=\"precio\">\n                <span\n                  *ngIf=\"articulosForm.controls['precio'].invalid && articulosForm.controls['precio'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputrfc\" class=\"col-sm-2 col-form-label\">Existencia:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputrfc\" placeholder=\"existencia\" formControlName=\"existencia\">\n                <span\n                  *ngIf=\"articulosForm.controls['existencia'].invalid && articulosForm.controls['existencia'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n\n            <div class=\"col-sm-10 row\">\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"articuloConsulta()\">Guardar</button>\n                </div>\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"regresar()\">cancelar</button>\n                </div>                \n            </div>\n        </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { ArticulosService } from '../services/articulos.service';\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-articulosalta',\n  templateUrl: './articulosalta.component.html',\n  styleUrls: ['./articulosalta.component.css']\n})\nexport class ArticulosaltaComponent implements OnInit {\n\n  public title: string;\n\n  public articulosForm: FormGroup;\n  private sub: any;\n\n  public id: number;\n\n  public artserie: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private art: ArticulosService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.articulosForm = this.fb.group({\n      articulo: new FormControl('',Validators.required),\n      descripcion: new FormControl('',Validators.required),\n      modelo: new FormControl('', Validators.required),\n      precio: new FormControl('', Validators.required),\n      existencia: new FormControl('',Validators.required),\n    });\n\n    this.title = 'Nuevo Articulo';\n\n    this.sub = this.route.params.subscribe((params) => {\n      this.id = +params['id'];\n      this.title = this.id ? 'Editar Articulo' : 'Nuevo Articulo';\n      if (this.id) {\n\n          this.art.getArticulo(this.id).subscribe(\n            res => {\n              var articulo = res;\n              this.artserie = this.id;\n              this.inicializarFormulario(articulo);\n            },  \n            err => console.log(err) \n          )\n          \n      } else {\n        this.art.lastArticulo().subscribe(  res => {\n          this.artserie = (res[0].articulo+1);\n          this.articulosForm.get('articulo').setValue(this.artserie);\n        },  \n        err => console.log(err) \n      )\n      }\n    });\n\n  }\n\n  public inicializarFormulario(data) {\n    this.articulosForm.setValue({\n      articulo: this.id ? this.id : 0,\n      descripcion: data.descripcion,\n      modelo: data.modelo,\n      precio : data.precio,\n      existencia: data.existencia\n    });\n \n  }\n\n  public guardarArticulo() {\n    if (this.articulosForm.valid){\n      const articulo = this.articulosForm.value;\n      articulo.opcion = 1;\n      this.art.guardarArticulo(articulo).subscribe(\n        res => {\n          Swal.fire(\n            '',\n            res['mensaje'],\n            'success'\n        )\n        this.router.navigate(['/articulos']);\n        },\n        err => console.log(err) \n      )\n    } else {\n      Swal.fire(\n          '',\n          'Faltan campos por llenar',\n          'warning'\n      )\n    }\n  }\n\n  public articuloConsulta() {\n\n    if(this.id){\n      this.actualizarArticulo();\n    } else {\n      this.guardarArticulo();\n    }\n  }\n\n  public actualizarArticulo() {\n    if (this.articulosForm.valid){\n      const articulo = this.articulosForm.value;\n      articulo.opcion = 2;\n      this.art.actualizarArticulo(articulo).subscribe(\n        res => {\n          Swal.fire(\n            '',\n            res['mensaje'],\n            'success'\n        )\n        this.router.navigate(['/articulos']);\n        },\n        err => console.log(err) \n      )\n    } else {\n      Swal.fire(\n          '',\n          'Faltan campos por llenar',\n          'warning'\n      )\n    }\n  }\n\n  public regresar() {\n\n    Swal.fire({\n      title: '¿Quiere regresar?',\n      text: \"Perdera los datos ingresados!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Devolverse!'\n    }).then((result) => {\n      if (result.value) {\n        this.router.navigate(['/articulos']);\n      }\n    })\n  }\n  \n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticulosService {\n\n  api: any;\n\n  constructor(private http: HttpClient) {\n    this.api = 'http://165.22.100.252:3000/api';\n  }\n\n  getArticulos() {\n    return this.http.get(`${this.api}/articulos`);\n  }\n\n  getArticulo(id: number) {\n    return this.http.get(`${this.api}/articulos/${id}`);\n  }\n\n  guardarArticulo(data: any){\n    return this.http.post(`${this.api}/articulos`, data);\n  }\n\n  actualizarArticulo(data: any){\n    return this.http.put(`${this.api}/articulos`, data);\n  }\n\n  lastArticulo(){\n    return this.http.get(`${this.api}/articulos/get/last`);\n  }\n}\n","<div class=\"row\" >\n    <button class=\"btn btn-success\" (click)=\"clienteNuevo()\"> \n        Nuevo Cliente\n    </button>\n\n</div>\n\n<br>\n\n<div class=\"row\">\n    <div class=\"col\">\n        <h4>Clientes Registrados</h4>\n\n        <table class=\"table table-hover\">\n            <thead>\n                <tr>\n                    <td>clave</td>\n                    <td>cliente</td>\n                    <td></td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let row of mGridCliente.data\">\n                    <td>{{row.id}}</td>\n                    <td>{{row.nombre}}</td>\n                    <td> \n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"editarcliente(row.id)\">Editar</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <!-- <div class=\"form-group col-sm-2\">\n            <label><b>Folio:</b></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" maxlength=\"9\" appRestringirTipo\n              [permitir]=\"'numeros'\" formControlName=\"folio\" (keyup.enter)=\"validarFolio()\" #folioId>\n        </div>-->\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ClientesService } from './services/clientes.service';\n\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.css']\n})\nexport class ClientesComponent implements OnInit {\n\n  public mGridCliente: any;\n\n  public data: any;\n\n  constructor(\n    private cs: ClientesService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.mGridCliente = {\n      selected: [],\n      cols: [\n        { field: 'clave', header: 'Clave Cliente', width: '20%' },\n        { field: 'cliente', header: 'Nombre', width: '70%' },\n        { field: 'boton', header: '' }\n      ],\n      data: [\n      ],\n    };\n\n    console.log('que paso');\n    this.cs.getClientes().subscribe(\n      res => {\n        this.mGridCliente.data = res;\n        console.log(this.mGridCliente.data) \n      },\n      err => console.log(err) \n    )\n\n  }\n\n  public clienteNuevo() {\n    this.router.navigate(['/clientes/nuevo']);\n  }\n\n  public editarcliente(id) {\n    this.router.navigate(['/clientes/editar/'+id]);\n  }\n\n}\n","<div class=\"col-md-10 offset-md-1\">\n\n    <div class=\"card border-secondary\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    {{title}}\n                </div>\n               \n                <div class=\"col-sm-6\">\n                    <p align=\"right\">Clave:{{clienteser}}</p> \n                </div>\n            </div>\n        </div>\n        <div class=\"card-body text-secondary\">\n\n        <form class=\"form-horizontal\" [formGroup]=\"clientesForm\">\n            <div class=\"form-group row\">\n            <label for=\"inputName\" class=\"col-sm-2 col-form-label\">Nombre:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputName\" placeholder=\"Nombre\" formControlName=\"nombre\">\n                <span\n                  *ngIf=\"clientesForm.controls['nombre'].invalid && clientesForm.controls['nombre'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapp\" class=\"col-sm-2 col-form-label\">Apellido Paterno:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapp\" placeholder=\"Apellido Paterno\" formControlName=\"appaterno\">\n                <span\n                  *ngIf=\"clientesForm.controls['appaterno'].invalid && clientesForm.controls['appaterno'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapm\" class=\"col-sm-2 col-form-label\">Apellido Materno:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapm\" placeholder=\"Apellido Materno\" formControlName=\"apmaterno\">\n                <span\n                  *ngIf=\"clientesForm.controls['apmaterno'].invalid && clientesForm.controls['apmaterno'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputrfc\" class=\"col-sm-2 col-form-label\">RFC:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputrfc\" placeholder=\"RFC\" formControlName=\"rfc\">\n                <span\n                  *ngIf=\"clientesForm.controls['rfc'].invalid && clientesForm.controls['rfc'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n\n            <div class=\"col-sm-10 row\">\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clienteConsulta()\">Guardar</button>\n                </div>\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"regresar()\">cancelar</button>\n                </div>                \n            </div>\n        </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { ClientesService } from '../services/clientes.service';\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-clientesalta',\n  templateUrl: './clientesalta.component.html',\n  styleUrls: ['./clientesalta.component.css']\n})\nexport class ClientesaltaComponent implements OnInit {\n\n  public title: string;\n\n  public clientesForm: FormGroup;\n  private sub: any;\n\n  public id: number;\n  public clienteser: number;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private cs: ClientesService,\n    private router: Router\n  ) { \n  }\n\n  ngOnInit(): void {\n\n    this.clientesForm = this.fb.group({\n      id: new FormControl(0,Validators.required),\n      nombre: new FormControl('',Validators.required),\n      appaterno: new FormControl('', Validators.required),\n      apmaterno: new FormControl('', Validators.required),\n      rfc: new FormControl('',Validators.required),\n    });\n\n    this.title = 'Registro de Clientes';\n\n    this.sub = this.route.params.subscribe((params) => {\n      this.id = +params['id'];\n      this.title = this.id ? 'Editar Cliente' : 'Nuevo Cliente';\n      if (this.id) {\n\n          this.cs.getCliente(this.id).subscribe(\n            res => {\n              var cliente = res;\n              this.clienteser = this.id;\n              this.inicializarFormulario(cliente);\n            },  \n            err => console.log(err) \n          )\n          \n      } else {\n        this.cs.lastCliente().subscribe(  res => {\n          this.clienteser = (res[0].id+1);\n        },  \n          err => console.log(err) \n        )\n      }\n    });\n\n  }\n\n\n  public inicializarFormulario(data) {\n    this.clientesForm.setValue({\n      id: this.id ? this.id : 0,\n      nombre: data.nombre,\n      appaterno: data.apellido_paterno,\n      apmaterno : data.apellido_materno,\n      rfc: data.rfc\n    });\n \n  }\n\n  public guardarCliente() {\n    if (this.clientesForm.valid){\n      const cliente = this.clientesForm.value;\n      this.cs.guardarCliente(cliente).subscribe(\n        res => {\n          Swal.fire(\n            '',\n            res['mensaje'],\n            'success'\n        )\n        this.router.navigate(['/clientes']);\n        },\n        err => console.log(err) \n      )\n    } else {\n      Swal.fire(\n          '',\n          'Faltan campos por llenar',\n          'warning'\n      )\n    }\n  }\n\n  public clienteConsulta() {\n\n    if(this.id){\n      this.actualizaCliente();\n    } else {\n      this.guardarCliente();\n    }\n  }\n\n  public actualizaCliente() {\n    if (this.clientesForm.valid){\n      const cliente = this.clientesForm.value;\n      this.cs.actualizarCliente(this.clientesForm.get('id').value,cliente).subscribe(\n        res => {\n          Swal.fire(\n            '',\n            res['mensaje'],\n            'success'\n        )\n        this.router.navigate(['/clientes']);\n        },\n        err => console.log(err) \n      )\n    } else {\n      Swal.fire(\n          '',\n          'Faltan campos por llenar',\n          'warning'\n      )\n    }\n  }\n\n  public regresar() {\n\n    Swal.fire({\n      title: '¿Quiere regresar?',\n      text: \"Perdera los datos ingresados!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Devolverse!'\n    }).then((result) => {\n      if (result.value) {\n        this.router.navigate(['/clientes']);\n      }\n    })\n  }\n  \n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  api: any;\n\n  constructor(private http: HttpClient) {\n    this.api = 'http://165.22.100.252:3000/api';\n  }\n\n  getClientes() {\n    return this.http.get(`${this.api}/clientes`);\n  }\n\n  getCliente(id: number) {\n    return this.http.get(`${this.api}/clientes/${id}`);\n  }\n\n  guardarCliente(data: any){\n    return this.http.post(`${this.api}/clientes`, data);\n  }\n\n  eliminarCliente(id: number){\n    return this.http.delete(`${this.api}/clientes/${id}`);\n  }\n\n  actualizarCliente(id: number, data: any){\n    return this.http.put(`${this.api}/clientes/${id}`, data);\n  }\n\n  lastCliente(){\n    return this.http.get(`${this.api}/clientes/get/last`);\n  }\n}\n","<div class=\"col-md-10 offset-md-1\">\n\n    <div class=\"card border-secondary\">\n        <div class=\"card-header\">Configuraci&oacute;n General</div>\n        <div class=\"card-body text-secondary\">\n\n        <form class=\"form-horizontal\" [formGroup]=\"configuracionForm\">\n            <div class=\"form-group row\">\n            <label for=\"inputName\" class=\"col-sm-2 col-form-label\">Tasa Financiamiento:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputName\" placeholder=\"tasa\" formControlName=\"tasa\">\n                <span\n                  *ngIf=\"configuracionForm.controls['tasa'].invalid && configuracionForm.controls['tasa'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapp\" class=\"col-sm-2 col-form-label\">% Enganche:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapp\" placeholder=\"enganche\" formControlName=\"enganche\">\n                <span\n                  *ngIf=\"configuracionForm.controls['enganche'].invalid && configuracionForm.controls['enganche'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapm\" class=\"col-sm-2 col-form-label\">Plazo M&aacute;ximo:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapm\" placeholder=\"plaza\" formControlName=\"plaza\">\n                <span\n                  *ngIf=\"configuracionForm.controls['plaza'].invalid && configuracionForm.controls['plaza'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n\n            <div class=\"col-sm-10 row\">\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"actualizarConfiguracion()\">Guardar</button>\n                </div>          \n            </div>\n        </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { ConfiguracionService } from './services/configuracion.service';\n\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-configuracion',\n  templateUrl: './configuracion.component.html',\n  styleUrls: ['./configuracion.component.css']\n})\nexport class ConfiguracionComponent implements OnInit {\n\n  public configuracionForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private config: ConfiguracionService,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.configuracionForm = this.fb.group({\n      tasa: new FormControl('',Validators.required),\n      enganche: new FormControl('', Validators.required),\n      plaza: new FormControl('', Validators.required)\n    });\n\n    this.inicializarFormulario();\n  }\n\n  public inicializarFormulario() {\n\n    this.config.getConfiguracion().subscribe(\n      res => {\n        console.log(res);\n        if(res[0] != undefined) {\n          this.configuracionForm.setValue({\n            tasa: res[0].tasa,\n            enganche: res[0].enganche,\n            plaza : res[0].plaza\n          });\n        }\n        \n      },\n      err => Swal.fire(\n        '',\n        err,\n        'error'\n      )\n    )\n \n  }\n\n  public actualizarConfiguracion() {\n    if (this.configuracionForm.valid){\n      const configuracion = this.configuracionForm.value;\n      console.log(configuracion);\n      this.config.actualizarConfiguracion(configuracion).subscribe(\n        res => {\n          Swal.fire(\n            '',\n            res['mensaje'],\n            'success'\n        )\n        },\n        err => Swal.fire(\n          '',\n          err,\n          'error'\n        )\n      )\n    } else {\n      Swal.fire(\n          '',\n          'Faltan campos por llenar',\n          'warning'\n      )\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfiguracionService {\n\n  api: any;\n\n  constructor(private http: HttpClient) {\n    //this.api = 'http://localhost:3000/api';\n    this.api = 'http://165.22.100.252:3000/api';\n  }\n\n  getConfiguracion() {\n    return this.http.get(`${this.api}/configuracion`);\n  }\n\n  actualizarConfiguracion(data){\n    return this.http.post(`${this.api}/configuracion`, data);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}