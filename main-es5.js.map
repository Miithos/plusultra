{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/navigation/navigation.component.html","webpack:///src/app/components/navigation/navigation.component.ts","webpack:///src/app/modules/articulos/articulos.component.html","webpack:///src/app/modules/articulos/articulos.component.ts","webpack:///src/app/modules/articulos/articulosalta/articulosalta.component.html","webpack:///src/app/modules/articulos/articulosalta/articulosalta.component.ts","webpack:///src/app/modules/articulos/services/articulos.service.ts","webpack:///src/app/modules/clientes/clientes.component.html","webpack:///src/app/modules/clientes/clientes.component.ts","webpack:///src/app/modules/clientes/clientesalta/clientesalta.component.html","webpack:///src/app/modules/clientes/clientesalta/clientesalta.component.ts","webpack:///src/app/modules/clientes/services/clientes.service.ts","webpack:///src/app/modules/configuracion/configuracion.component.html","webpack:///src/app/modules/configuracion/configuracion.component.ts","webpack:///src/app/modules/configuracion/services/configuracion.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","AppComponent","title","AppModule","NavigationComponent","fecha","Date","getDate","getMonth","getFullYear","ArticulosComponent","art","router","mGridArticulo","selected","cols","field","header","width","data","getArticulos","subscribe","res","err","console","log","navigate","ArticulosaltaComponent","fb","route","articulosForm","group","articulo","required","descripcion","modelo","precio","existencia","sub","params","getArticulo","artserie","inicializarFormulario","lastArticulo","get","setValue","valid","value","opcion","guardarArticulo","fire","actualizarArticulo","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","unsubscribe","ArticulosService","http","api","post","put","ClientesComponent","cs","mGridCliente","getClientes","ClientesaltaComponent","clientesForm","nombre","appaterno","apmaterno","rfc","getCliente","cliente","clienteser","lastCliente","apellido_paterno","apellido_materno","guardarCliente","actualizaCliente","actualizarCliente","ClientesService","delete","ConfiguracionComponent","config","configuracionForm","tasa","enganche","plaza","getConfiguracion","undefined","configuracion","actualizarConfiguracion","ConfiguracionService","environment","production","catch","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { environment } from './../environments/environment';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\n\nimport { AppComponent } from './app.component';\n\nimport { ClientesComponent } from './modules/clientes/clientes.component';\nimport { ClientesaltaComponent } from './modules/clientes/clientesalta/clientesalta.component';\nimport { ConfiguracionComponent } from './modules/configuracion/configuracion.component';\n\nimport { ArticulosComponent } from './modules/articulos/articulos.component';\nimport { ArticulosaltaComponent } from './modules/articulos/articulosalta/articulosalta.component';\n\n\n// import {ClientesaltaComponent} from './modules/clientes/clientesalta/clientesalta.component';\n\nconst routes: Routes = [\n  { \n\n      path: 'clientes',\n      component: ClientesComponent,\n      //loadChildren: './modules/clientes/clientes.module#ClientesModule',\n    // children: [\n    // {\n    //   path: '',\n    //   component: ClientesaltaComponent,\n},\n{ path: 'clientes/nuevo',  component: ClientesaltaComponent },\n{ path: 'clientes/editar/:id',  component: ClientesaltaComponent },\n{ path: 'configuracion',  component: ConfiguracionComponent },\n\n{ path: 'articulos',  component: ArticulosComponent },\n{ path: 'articulos/nuevo',  component: ArticulosaltaComponent },\n{ path: 'articulos/editar/:id',  component: ArticulosaltaComponent },\n  { path: '',   redirectTo: '/', pathMatch: 'full' },\n  { path: '**',  redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n    \n}\n","<app-navigation></app-navigation>\n\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'exam';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { ClientesComponent } from './modules/clientes/clientes.component';\nimport { ClientesaltaComponent } from './modules/clientes/clientesalta/clientesalta.component';\n\nimport { ConfiguracionComponent } from './modules/configuracion/configuracion.component';\nimport { ArticulosComponent } from './modules/articulos/articulos.component';\nimport { ArticulosaltaComponent } from './modules/articulos/articulosalta/articulosalta.component';\n\n\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    ClientesComponent,\n    ClientesaltaComponent,\n    ConfiguracionComponent,\n    ArticulosComponent,\n    ArticulosaltaComponent\n  ],\n  imports: [\n    FormsModule, \n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BsDropdownModule.forRoot(),\n    BrowserAnimationsModule,\n    HttpClientModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: [BsDropdownModule],\n})\nexport class AppModule { }\n","\n  <!-- Toolbar -->\n  <div class=\"extratoolbar\" role=\"banner\">\n    <div class=\"spacer\"></div>\n    <span>La Vendimia</span>\n  </div>\n  <div class=\"toolbar\" role=\"banner\">\n  \n    <div class=\"dropdown\" dropdown> <!-- {1} -->\n      <button dropdownToggle role=\"button\" style=\"padding: 12px; background-color: #333; color: white;\"> <!-- {2} -->\n        Inicio <span class=\"caret\"></span></button>\n      <ul *dropdownMenu class=\"dropdown-menu\"> <!-- {3} -->\n          <li><a href=\"#\">Ventas</a></li>\n          <div class=\"dropdown-divider\"></div>\n          <li><a routerLink=\"/clientes\" routerLinkActive=\"active\">Clientes</a></li>\n          <li><a routerLink=\"/articulos\" routerLinkActive=\"active\">Articulos</a></li>\n          <li><a routerLink=\"/configuracion\" routerLinkActive=\"active\">Configuraci&oacute;n</a></li>\n      </ul>\n    </div>\n    \n  \n    \n      <div class=\"spacer\"></div>\n      <span>Fecha: {{ fecha }}</span>\n  </div>\n  <div class=\"espacio\" role=\"banner\">\n  </div>\n\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  title = 'exam';\n  fecha: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    this.fecha = new Date;\n    this.fecha = this.fecha.getDate()+'/'+(this.fecha.getMonth()+1)+'/'+this.fecha.getFullYear();\n    \n  }\n\n}\n","<div class=\"row\" >\n    <button class=\"btn btn-success\" (click)=\"articuloNuevo()\"> \n        Nuevo Art&iacute;culo\n    </button>\n\n</div>\n\n<br>\n\n<div class=\"row\">\n    <div class=\"col\">\n        <h4>Art&iacute;culos Registrados</h4>\n\n        <table class=\"table table-hover\">\n            <thead>\n                <tr>\n                    <td>Clave Articulo</td>\n                    <td>Descripci&oacute;n</td>\n                    <td></td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let row of mGridArticulo.data\">\n                    <td>{{row.articulo}}</td>\n                    <td>{{row.descripcion}}</td>\n                    <td> \n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"editararticulo(row.articulo)\">Editar</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n\nimport { ArticulosService } from './services/articulos.service';\n\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-articulos',\n  templateUrl: './articulos.component.html',\n  styleUrls: ['./articulos.component.css']\n})\nexport class ArticulosComponent implements OnInit {\n\n  public mGridArticulo: any;\n\n  public data: any;\n\n  constructor(\n    private art: ArticulosService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  \n    this.mGridArticulo = {\n      selected: [],\n      cols: [\n        { field: 'articulo', header: 'Clave Articulo', width: '20%' },\n        { field: 'descripcion', header: 'Descripcion', width: '70%' },\n        { field: 'boton', header: '' }\n      ],\n      data: [\n      ],\n    };\n\n    this.art.getArticulos().subscribe(\n      res => {\n        this.mGridArticulo.data = res;\n      },\n      err => console.log(err) \n    )\n\n  }\n\n  public articuloNuevo() {\n    this.router.navigate(['/articulos/nuevo']);\n  }\n\n  public editararticulo(id) {\n    this.router.navigate(['/articulos/editar/'+id]);\n  }\n\n}\n","<div class=\"col-md-10 offset-md-1\">\n\n    <div class=\"card border-secondary\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    {{title}}\n                </div>\n               \n                <div class=\"col-sm-6\">\n                    <p align=\"right\">Clave:{{artserie}}</p> \n                </div>\n            </div>\n            \n            \n        </div>\n       \n        <div class=\"card-body text-secondary\">\n\n        <form class=\"form-horizontal\" [formGroup]=\"articulosForm\">\n            <div class=\"form-group row\">\n            <label for=\"inputName\" class=\"col-sm-2 col-form-label\">Descripci&oacute;n:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputName\" placeholder=\"descripcion\" formControlName=\"descripcion\">\n                <span\n                  *ngIf=\"articulosForm.controls['descripcion'].invalid && articulosForm.controls['descripcion'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapp\" class=\"col-sm-2 col-form-label\">Modelo:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapp\" placeholder=\"modelo\" formControlName=\"modelo\">\n                <span\n                  *ngIf=\"articulosForm.controls['modelo'].invalid && articulosForm.controls['modelo'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapm\" class=\"col-sm-2 col-form-label\">Precio:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapm\" placeholder=\"precio\" formControlName=\"precio\">\n                <span\n                  *ngIf=\"articulosForm.controls['precio'].invalid && articulosForm.controls['precio'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputrfc\" class=\"col-sm-2 col-form-label\">Existencia:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputrfc\" placeholder=\"existencia\" formControlName=\"existencia\">\n                <span\n                  *ngIf=\"articulosForm.controls['existencia'].invalid && articulosForm.controls['existencia'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n\n            <div class=\"col-sm-10 row\">\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"articuloConsulta()\">Guardar</button>\n                </div>\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"regresar()\">cancelar</button>\n                </div>                \n            </div>\n        </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { ArticulosService } from '../services/articulos.service';\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-articulosalta',\n  templateUrl: './articulosalta.component.html',\n  styleUrls: ['./articulosalta.component.css']\n})\nexport class ArticulosaltaComponent implements OnInit {\n\n  public title: string;\n\n  public articulosForm: FormGroup;\n  private sub: any;\n\n  public id: number;\n\n  public artserie: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private art: ArticulosService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.articulosForm = this.fb.group({\n      articulo: new FormControl('',Validators.required),\n      descripcion: new FormControl('',Validators.required),\n      modelo: new FormControl('', Validators.required),\n      precio: new FormControl('', Validators.required),\n      existencia: new FormControl('',Validators.required),\n    });\n\n    this.title = 'Nuevo Articulo';\n\n    this.sub = this.route.params.subscribe((params) => {\n      this.id = +params['id'];\n      this.title = this.id ? 'Editar Articulo' : 'Nuevo Articulo';\n      if (this.id) {\n\n          this.art.getArticulo(this.id).subscribe(\n            res => {\n              var articulo = res;\n              this.artserie = this.id;\n              this.inicializarFormulario(articulo);\n            },  \n            err => console.log(err) \n          )\n          \n      } else {\n        this.art.lastArticulo().subscribe(  res => {\n          this.artserie = (res[0].articulo+1);\n          this.articulosForm.get('articulo').setValue(this.artserie);\n        },  \n        err => console.log(err) \n      )\n      }\n    });\n\n  }\n\n  public inicializarFormulario(data) {\n    this.articulosForm.setValue({\n      articulo: this.id ? this.id : 0,\n      descripcion: data.descripcion,\n      modelo: data.modelo,\n      precio : data.precio,\n      existencia: data.existencia\n    });\n \n  }\n\n  public guardarArticulo() {\n    if (this.articulosForm.valid){\n      const articulo = this.articulosForm.value;\n      articulo.opcion = 1;\n      this.art.guardarArticulo(articulo).subscribe(\n        res => {\n          Swal.fire(\n            '',\n            res['mensaje'],\n            'success'\n        )\n        this.router.navigate(['/articulos']);\n        },\n        err => console.log(err) \n      )\n    } else {\n      Swal.fire(\n          '',\n          'Faltan campos por llenar',\n          'warning'\n      )\n    }\n  }\n\n  public articuloConsulta() {\n\n    if(this.id){\n      this.actualizarArticulo();\n    } else {\n      this.guardarArticulo();\n    }\n  }\n\n  public actualizarArticulo() {\n    if (this.articulosForm.valid){\n      const articulo = this.articulosForm.value;\n      articulo.opcion = 2;\n      this.art.actualizarArticulo(articulo).subscribe(\n        res => {\n          Swal.fire(\n            '',\n            res['mensaje'],\n            'success'\n        )\n        this.router.navigate(['/articulos']);\n        },\n        err => console.log(err) \n      )\n    } else {\n      Swal.fire(\n          '',\n          'Faltan campos por llenar',\n          'warning'\n      )\n    }\n  }\n\n  public regresar() {\n\n    Swal.fire({\n      title: '¿Quiere regresar?',\n      text: \"Perdera los datos ingresados!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Devolverse!'\n    }).then((result) => {\n      if (result.value) {\n        this.router.navigate(['/articulos']);\n      }\n    })\n  }\n  \n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticulosService {\n\n  api: any;\n\n  constructor(private http: HttpClient) {\n    this.api = 'http://165.22.100.252:3000/api';\n  }\n\n  getArticulos() {\n    return this.http.get(`${this.api}/articulos`);\n  }\n\n  getArticulo(id: number) {\n    return this.http.get(`${this.api}/articulos/${id}`);\n  }\n\n  guardarArticulo(data: any){\n    return this.http.post(`${this.api}/articulos`, data);\n  }\n\n  actualizarArticulo(data: any){\n    return this.http.put(`${this.api}/articulos`, data);\n  }\n\n  lastArticulo(){\n    return this.http.get(`${this.api}/articulos/get/last`);\n  }\n}\n","<div class=\"row\" >\n    <button class=\"btn btn-success\" (click)=\"clienteNuevo()\"> \n        Nuevo Cliente\n    </button>\n\n</div>\n\n<br>\n\n<div class=\"row\">\n    <div class=\"col\">\n        <h4>Clientes Registrados</h4>\n\n        <table class=\"table table-hover\">\n            <thead>\n                <tr>\n                    <td>clave</td>\n                    <td>cliente</td>\n                    <td></td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let row of mGridCliente.data\">\n                    <td>{{row.id}}</td>\n                    <td>{{row.nombre}}</td>\n                    <td> \n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"editarcliente(row.id)\">Editar</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <!-- <div class=\"form-group col-sm-2\">\n            <label><b>Folio:</b></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" maxlength=\"9\" appRestringirTipo\n              [permitir]=\"'numeros'\" formControlName=\"folio\" (keyup.enter)=\"validarFolio()\" #folioId>\n        </div>-->\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ClientesService } from './services/clientes.service';\n\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.css']\n})\nexport class ClientesComponent implements OnInit {\n\n  public mGridCliente: any;\n\n  public data: any;\n\n  constructor(\n    private cs: ClientesService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.mGridCliente = {\n      selected: [],\n      cols: [\n        { field: 'clave', header: 'Clave Cliente', width: '20%' },\n        { field: 'cliente', header: 'Nombre', width: '70%' },\n        { field: 'boton', header: '' }\n      ],\n      data: [\n      ],\n    };\n\n    console.log('que paso');\n    this.cs.getClientes().subscribe(\n      res => {\n        this.mGridCliente.data = res;\n        console.log(this.mGridCliente.data) \n      },\n      err => console.log(err) \n    )\n\n  }\n\n  public clienteNuevo() {\n    this.router.navigate(['/clientes/nuevo']);\n  }\n\n  public editarcliente(id) {\n    this.router.navigate(['/clientes/editar/'+id]);\n  }\n\n}\n","<div class=\"col-md-10 offset-md-1\">\n\n    <div class=\"card border-secondary\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    {{title}}\n                </div>\n               \n                <div class=\"col-sm-6\">\n                    <p align=\"right\">Clave:{{clienteser}}</p> \n                </div>\n            </div>\n        </div>\n        <div class=\"card-body text-secondary\">\n\n        <form class=\"form-horizontal\" [formGroup]=\"clientesForm\">\n            <div class=\"form-group row\">\n            <label for=\"inputName\" class=\"col-sm-2 col-form-label\">Nombre:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputName\" placeholder=\"Nombre\" formControlName=\"nombre\">\n                <span\n                  *ngIf=\"clientesForm.controls['nombre'].invalid && clientesForm.controls['nombre'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapp\" class=\"col-sm-2 col-form-label\">Apellido Paterno:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapp\" placeholder=\"Apellido Paterno\" formControlName=\"appaterno\">\n                <span\n                  *ngIf=\"clientesForm.controls['appaterno'].invalid && clientesForm.controls['appaterno'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapm\" class=\"col-sm-2 col-form-label\">Apellido Materno:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapm\" placeholder=\"Apellido Materno\" formControlName=\"apmaterno\">\n                <span\n                  *ngIf=\"clientesForm.controls['apmaterno'].invalid && clientesForm.controls['apmaterno'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputrfc\" class=\"col-sm-2 col-form-label\">RFC:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputrfc\" placeholder=\"RFC\" formControlName=\"rfc\">\n                <span\n                  *ngIf=\"clientesForm.controls['rfc'].invalid && clientesForm.controls['rfc'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n\n            <div class=\"col-sm-10 row\">\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clienteConsulta()\">Guardar</button>\n                </div>\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"regresar()\">cancelar</button>\n                </div>                \n            </div>\n        </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { ClientesService } from '../services/clientes.service';\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-clientesalta',\n  templateUrl: './clientesalta.component.html',\n  styleUrls: ['./clientesalta.component.css']\n})\nexport class ClientesaltaComponent implements OnInit {\n\n  public title: string;\n\n  public clientesForm: FormGroup;\n  private sub: any;\n\n  public id: number;\n  public clienteser: number;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private cs: ClientesService,\n    private router: Router\n  ) { \n  }\n\n  ngOnInit(): void {\n\n    this.clientesForm = this.fb.group({\n      id: new FormControl(0,Validators.required),\n      nombre: new FormControl('',Validators.required),\n      appaterno: new FormControl('', Validators.required),\n      apmaterno: new FormControl('', Validators.required),\n      rfc: new FormControl('',Validators.required),\n    });\n\n    this.title = 'Registro de Clientes';\n\n    this.sub = this.route.params.subscribe((params) => {\n      this.id = +params['id'];\n      this.title = this.id ? 'Editar Cliente' : 'Nuevo Cliente';\n      if (this.id) {\n\n          this.cs.getCliente(this.id).subscribe(\n            res => {\n              var cliente = res;\n              this.clienteser = this.id;\n              this.inicializarFormulario(cliente);\n            },  \n            err => console.log(err) \n          )\n          \n      } else {\n        this.cs.lastCliente().subscribe(  res => {\n          this.clienteser = (res[0].id+1);\n        },  \n          err => console.log(err) \n        )\n      }\n    });\n\n  }\n\n\n  public inicializarFormulario(data) {\n    this.clientesForm.setValue({\n      id: this.id ? this.id : 0,\n      nombre: data.nombre,\n      appaterno: data.apellido_paterno,\n      apmaterno : data.apellido_materno,\n      rfc: data.rfc\n    });\n \n  }\n\n  public guardarCliente() {\n    if (this.clientesForm.valid){\n      const cliente = this.clientesForm.value;\n      this.cs.guardarCliente(cliente).subscribe(\n        res => {\n          Swal.fire(\n            '',\n            res['mensaje'],\n            'success'\n        )\n        this.router.navigate(['/clientes']);\n        },\n        err => console.log(err) \n      )\n    } else {\n      Swal.fire(\n          '',\n          'Faltan campos por llenar',\n          'warning'\n      )\n    }\n  }\n\n  public clienteConsulta() {\n\n    if(this.id){\n      this.actualizaCliente();\n    } else {\n      this.guardarCliente();\n    }\n  }\n\n  public actualizaCliente() {\n    if (this.clientesForm.valid){\n      const cliente = this.clientesForm.value;\n      this.cs.actualizarCliente(this.clientesForm.get('id').value,cliente).subscribe(\n        res => {\n          Swal.fire(\n            '',\n            res['mensaje'],\n            'success'\n        )\n        this.router.navigate(['/clientes']);\n        },\n        err => console.log(err) \n      )\n    } else {\n      Swal.fire(\n          '',\n          'Faltan campos por llenar',\n          'warning'\n      )\n    }\n  }\n\n  public regresar() {\n\n    Swal.fire({\n      title: '¿Quiere regresar?',\n      text: \"Perdera los datos ingresados!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Devolverse!'\n    }).then((result) => {\n      if (result.value) {\n        this.router.navigate(['/clientes']);\n      }\n    })\n  }\n  \n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  api: any;\n\n  constructor(private http: HttpClient) {\n    this.api = 'http://165.22.100.252:3000/api';\n  }\n\n  getClientes() {\n    return this.http.get(`${this.api}/clientes`);\n  }\n\n  getCliente(id: number) {\n    return this.http.get(`${this.api}/clientes/${id}`);\n  }\n\n  guardarCliente(data: any){\n    return this.http.post(`${this.api}/clientes`, data);\n  }\n\n  eliminarCliente(id: number){\n    return this.http.delete(`${this.api}/clientes/${id}`);\n  }\n\n  actualizarCliente(id: number, data: any){\n    return this.http.put(`${this.api}/clientes/${id}`, data);\n  }\n\n  lastCliente(){\n    return this.http.get(`${this.api}/clientes/get/last`);\n  }\n}\n","<div class=\"col-md-10 offset-md-1\">\n\n    <div class=\"card border-secondary\">\n        <div class=\"card-header\">Configuraci&oacute;n General</div>\n        <div class=\"card-body text-secondary\">\n\n        <form class=\"form-horizontal\" [formGroup]=\"configuracionForm\">\n            <div class=\"form-group row\">\n            <label for=\"inputName\" class=\"col-sm-2 col-form-label\">Tasa Financiamiento:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputName\" placeholder=\"tasa\" formControlName=\"tasa\">\n                <span\n                  *ngIf=\"configuracionForm.controls['tasa'].invalid && configuracionForm.controls['tasa'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapp\" class=\"col-sm-2 col-form-label\">% Enganche:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapp\" placeholder=\"enganche\" formControlName=\"enganche\">\n                <span\n                  *ngIf=\"configuracionForm.controls['enganche'].invalid && configuracionForm.controls['enganche'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n            <div class=\"form-group row\">\n            <label for=\"inputapm\" class=\"col-sm-2 col-form-label\">Plazo M&aacute;ximo:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"inputapm\" placeholder=\"plaza\" formControlName=\"plaza\">\n                <span\n                  *ngIf=\"configuracionForm.controls['plaza'].invalid && configuracionForm.controls['plaza'].touched\"\n                  class=\"help-block text-danger\"\n                  >Este campo es requerido</span>\n            </div>\n            </div>\n\n            <div class=\"col-sm-10 row\">\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"actualizarConfiguracion()\">Guardar</button>\n                </div>          \n            </div>\n        </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { ConfiguracionService } from './services/configuracion.service';\n\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-configuracion',\n  templateUrl: './configuracion.component.html',\n  styleUrls: ['./configuracion.component.css']\n})\nexport class ConfiguracionComponent implements OnInit {\n\n  public configuracionForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private config: ConfiguracionService,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.configuracionForm = this.fb.group({\n      tasa: new FormControl('',Validators.required),\n      enganche: new FormControl('', Validators.required),\n      plaza: new FormControl('', Validators.required)\n    });\n\n    this.inicializarFormulario();\n  }\n\n  public inicializarFormulario() {\n\n    this.config.getConfiguracion().subscribe(\n      res => {\n        console.log(res);\n        if(res[0] != undefined) {\n          this.configuracionForm.setValue({\n            tasa: res[0].tasa,\n            enganche: res[0].enganche,\n            plaza : res[0].plaza\n          });\n        }\n        \n      },\n      err => Swal.fire(\n        '',\n        err,\n        'error'\n      )\n    )\n \n  }\n\n  public actualizarConfiguracion() {\n    if (this.configuracionForm.valid){\n      const configuracion = this.configuracionForm.value;\n      console.log(configuracion);\n      this.config.actualizarConfiguracion(configuracion).subscribe(\n        res => {\n          Swal.fire(\n            '',\n            res['mensaje'],\n            'success'\n        )\n        },\n        err => Swal.fire(\n          '',\n          err,\n          'error'\n        )\n      )\n    } else {\n      Swal.fire(\n          '',\n          'Faltan campos por llenar',\n          'warning'\n      )\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfiguracionService {\n\n  api: any;\n\n  constructor(private http: HttpClient) {\n    //this.api = 'http://localhost:3000/api';\n    this.api = 'http://165.22.100.252:3000/api';\n  }\n\n  getConfiguracion() {\n    return this.http.get(`${this.api}/configuracion`);\n  }\n\n  actualizarConfiguracion(data){\n    return this.http.post(`${this.api}/configuracion`, data);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}